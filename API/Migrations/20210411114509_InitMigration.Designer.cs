// <auto-generated />
using System;
using API.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace API.Migrations
{
    [DbContext(typeof(AssignmentContext))]
    [Migration("20210411114509_InitMigration")]
    partial class InitMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.5")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("API.Models.Assignment", b =>
                {
                    b.Property<int>("AssignmentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AssignmentDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("AssignmentEndDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("AssignmentIsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("AssignmentPhotoAttach")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("AssignmentPriorityId")
                        .HasColumnType("int");

                    b.Property<DateTime>("AssignmentStartDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("AssignmentStatusId")
                        .HasColumnType("int");

                    b.Property<string>("AssignmentTitle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("AssignmentUserId")
                        .HasColumnType("int");

                    b.HasKey("AssignmentId");

                    b.HasIndex("AssignmentPriorityId");

                    b.HasIndex("AssignmentStatusId");

                    b.HasIndex("AssignmentUserId");

                    b.ToTable("Assignments");
                });

            modelBuilder.Entity("API.Models.Priority", b =>
                {
                    b.Property<int>("PriorityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("PriorityTitle")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PriorityId");

                    b.ToTable("Priorities");
                });

            modelBuilder.Entity("API.Models.Status", b =>
                {
                    b.Property<int>("StatusId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("StatusTitle")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("StatusId");

                    b.ToTable("Statuses");
                });

            modelBuilder.Entity("API.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("UserFirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserLastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("API.Models.Assignment", b =>
                {
                    b.HasOne("API.Models.Priority", "PriorityAssignment")
                        .WithMany("AssignmentsPriority")
                        .HasForeignKey("AssignmentPriorityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("API.Models.Status", "StatusAssignment")
                        .WithMany("AssignmentsStatus")
                        .HasForeignKey("AssignmentStatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("API.Models.User", "UserAssignment")
                        .WithMany("Assignments")
                        .HasForeignKey("AssignmentUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PriorityAssignment");

                    b.Navigation("StatusAssignment");

                    b.Navigation("UserAssignment");
                });

            modelBuilder.Entity("API.Models.Priority", b =>
                {
                    b.Navigation("AssignmentsPriority");
                });

            modelBuilder.Entity("API.Models.Status", b =>
                {
                    b.Navigation("AssignmentsStatus");
                });

            modelBuilder.Entity("API.Models.User", b =>
                {
                    b.Navigation("Assignments");
                });
#pragma warning restore 612, 618
        }
    }
}
